{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Documents\\\\UpgradCapstone\\\\BookMyConsultationUI\\\\src\\\\screens\\\\doctorList\\\\DoctorList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardActions, Button, Typography, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { fetchDoctors, fetchSpecialities } from '../../util/fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorList = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [specialities, setSpecialities] = useState([]);\n  const [speciality, setSpeciality] = useState('');\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  useEffect(() => {\n    async function fetchAllDoctors() {\n      try {\n        const response = await fetchDoctors();\n        setDoctors(response.data);\n        setFilteredDoctors(response.data);\n      } catch (error) {\n        console.error('Error fetching doctors:', error);\n      }\n    }\n    async function fetchAllSpecialities() {\n      try {\n        const specialities = await fetchSpecialities();\n        setSpecialities(specialities);\n      } catch (error) {\n        console.error('Error fetching specialities:', error);\n      }\n    }\n    fetchAllDoctors();\n    fetchAllSpecialities();\n  }, []);\n  const handleSpecialityChange = event => {\n    const selectedSpeciality = event.target.value;\n    setSpeciality(selectedSpeciality);\n    if (selectedSpeciality) {\n      setFilteredDoctors(doctors.filter(doctor => doctor.speciality === selectedSpeciality));\n    } else {\n      setFilteredDoctors(doctors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      style: {\n        minWidth: 200,\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"speciality-label\",\n        children: \"Speciality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"speciality-label\",\n        id: \"speciality-select\",\n        value: speciality,\n        onChange: handleSpecialityChange,\n        label: \"Speciality\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"All Specialities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), specialities.map(speciality => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: speciality,\n          children: speciality\n        }, speciality, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), filteredDoctors.map(doctor => /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: [doctor.firstName, \" \", doctor.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: doctor.speciality\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2605\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), doctor.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"small\",\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          size: \"small\",\n          children: \"Book Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, doctor.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorList, \"UFr/Qcq70UxEtgvCXvw6tqLuIL8=\");\n_c = DoctorList;\nexport default DoctorList;\nvar _c;\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","CardActions","Button","Typography","Select","MenuItem","FormControl","InputLabel","fetchDoctors","fetchSpecialities","jsxDEV","_jsxDEV","DoctorList","_s","doctors","setDoctors","specialities","setSpecialities","speciality","setSpeciality","filteredDoctors","setFilteredDoctors","fetchAllDoctors","response","data","error","console","fetchAllSpecialities","handleSpecialityChange","event","selectedSpeciality","target","value","filter","doctor","children","variant","style","minWidth","marginBottom","id","fileName","_jsxFileName","lineNumber","columnNumber","labelId","onChange","label","map","component","firstName","lastName","color","className","rating","size","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Documents/UpgradCapstone/BookMyConsultationUI/src/screens/doctorList/DoctorList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardActions, Button, Typography, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\r\nimport { fetchDoctors, fetchSpecialities } from '../../util/fetch';\r\n\r\nconst DoctorList = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [specialities, setSpecialities] = useState([]);\r\n  const [speciality, setSpeciality] = useState('');\r\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchAllDoctors() {\r\n      try {\r\n        const response = await fetchDoctors();\r\n        setDoctors(response.data);\r\n        setFilteredDoctors(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching doctors:', error);\r\n      }\r\n    }\r\n\r\n    async function fetchAllSpecialities() {\r\n      try {\r\n        const specialities = await fetchSpecialities();\r\n        setSpecialities(specialities);\r\n      } catch (error) {\r\n        console.error('Error fetching specialities:', error);\r\n      }\r\n    }\r\n\r\n    fetchAllDoctors();\r\n    fetchAllSpecialities();\r\n  }, []);\r\n\r\n  const handleSpecialityChange = (event) => {\r\n    const selectedSpeciality = event.target.value;\r\n    setSpeciality(selectedSpeciality);\r\n    if (selectedSpeciality) {\r\n      setFilteredDoctors(doctors.filter(doctor => doctor.speciality === selectedSpeciality));\r\n    } else {\r\n      setFilteredDoctors(doctors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl variant=\"outlined\" style={{ minWidth: 200, marginBottom: 20 }}>\r\n        <InputLabel id=\"speciality-label\">Speciality</InputLabel>\r\n        <Select\r\n          labelId=\"speciality-label\"\r\n          id=\"speciality-select\"\r\n          value={speciality}\r\n          onChange={handleSpecialityChange}\r\n          label=\"Speciality\"\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>All Specialities</em>\r\n          </MenuItem>\r\n          {specialities.map(speciality => (\r\n            <MenuItem key={speciality} value={speciality}>{speciality}</MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      {filteredDoctors.map((doctor) => (\r\n        <Card key={doctor.id} style={{ marginBottom: 20 }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              {doctor.firstName} {doctor.lastName}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {doctor.speciality}\r\n            </Typography>\r\n            <div className=\"rating\">\r\n              <span>&#9733;</span>\r\n              {doctor.rating}\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"small\">View Details</Button>\r\n            <Button variant=\"contained\" color=\"success\" size=\"small\">Book Appointment</Button>\r\n          </CardActions>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}