{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Documents\\\\UpgradCapstone\\\\BookMyConsultationUI\\\\src\\\\screens\\\\doctorList\\\\BookAppointment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, DateFnsUtils } from '@material-ui/pickers';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { fetchDoctorTimeslots } from '../../util/fetch';\nimport { Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookAppointment = ({\n  doctor\n}) => {\n  _s();\n  const [modalIsOpen, setModalIsOpen] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [timeSlots, setTimeSlots] = useState([]); // State to store fetched timeslots\n  const [timeSlot, setTimeSlot] = useState('');\n  const [medicalHistory, setMedicalHistory] = useState('');\n  const [symptoms, setSymptoms] = useState('');\n  const handleCloseModal = () => setModalIsOpen(false);\n  const isTimeSlotSelected = timeSlot !== '';\n\n  // Fetch available timeslots on modal open\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedTimeSlots = await fetchDoctorTimeslots(doctor.doctorId, selectedDate);\n      setTimeSlots(fetchedTimeSlots);\n    };\n    if (modalIsOpen) {\n      fetchData();\n    }\n  }, [modalIsOpen, doctor.doctorId, selectedDate, fetchDoctorTimeslots]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: handleCloseModal,\n      style: {\n        content: {\n          margin: 'auto'\n        }\n      },\n      className: \"bookAppointmentModal\" // Use classes for custom styling (optional)\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookAppointmentMainCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Book an Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Doctor Name\",\n          value: doctor.firstName + \" \" + doctor.lastName,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n          utils: DateFnsUtils,\n          children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n            disableToolbar: true,\n            variant: \"inline\",\n            format: \"MM/dd/yyyy\",\n            margin: \"normal\",\n            label: \"Appointment Date\",\n            value: selectedDate,\n            onChange: event => setSelectedDate(event.target.value),\n            KeyboardButtonProps: {\n              disabled: true // Disable keyboard input for date selection\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            value: timeSlot,\n            onChange: e => setTimeSlot(e.target.value),\n            displayEmpty: true,\n            error: !isTimeSlotSelected,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"\",\n              children: \"Select a time slot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), timeSlots.map(slot => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: slot,\n              children: slot\n            }, slot, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), !isTimeSlotSelected && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"errorcontainer\",\n            children: \"Select a time slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Medical History\",\n            multiline: true,\n            value: medicalHistory,\n            onChange: e => setMedicalHistory(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Symptoms\",\n            multiline: true,\n            value: symptoms,\n            onChange: e => setSymptoms(e.target.value),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"small\",\n          children: \"BOOK APPOINTMENT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(BookAppointment, \"RnVPSKGCnsMhQJubFq9k6noUuhs=\");\n_c = BookAppointment;\nexport default BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["React","useState","useEffect","Modal","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","FormControl","TextField","Select","MenuItem","fetchDoctorTimeslots","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","BookAppointment","doctor","_s","modalIsOpen","setModalIsOpen","selectedDate","setSelectedDate","Date","timeSlots","setTimeSlots","timeSlot","setTimeSlot","medicalHistory","setMedicalHistory","symptoms","setSymptoms","handleCloseModal","isTimeSlotSelected","fetchData","fetchedTimeSlots","doctorId","children","isOpen","onRequestClose","style","content","margin","className","fileName","_jsxFileName","lineNumber","columnNumber","label","value","firstName","lastName","disabled","utils","disableToolbar","variant","format","onChange","event","target","KeyboardButtonProps","e","displayEmpty","error","map","slot","multiline","color","size","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Documents/UpgradCapstone/BookMyConsultationUI/src/screens/doctorList/BookAppointment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, DateFnsUtils } from '@material-ui/pickers';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { fetchDoctorTimeslots } from '../../util/fetch';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst BookAppointment = ({ doctor }) => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [timeSlots, setTimeSlots] = useState([]); // State to store fetched timeslots\r\n  const [timeSlot, setTimeSlot] = useState('');\r\n  const [medicalHistory, setMedicalHistory] = useState('');\r\n  const [symptoms, setSymptoms] = useState('');\r\n\r\n\r\n  const handleCloseModal = () => setModalIsOpen(false);\r\n  const isTimeSlotSelected = timeSlot !== '';\r\n  \r\n  // Fetch available timeslots on modal open\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const fetchedTimeSlots = await fetchDoctorTimeslots(doctor.doctorId, selectedDate);\r\n      setTimeSlots(fetchedTimeSlots);\r\n    };\r\n    if (modalIsOpen) {\r\n      fetchData();\r\n    }\r\n  }, [modalIsOpen, doctor.doctorId, selectedDate, fetchDoctorTimeslots]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={handleCloseModal}\r\n        style={{ content: { margin: 'auto' } }}\r\n        className=\"bookAppointmentModal\" // Use classes for custom styling (optional)\r\n      >\r\n        <div className=\"bookAppointmentMainCard\">\r\n          <h2>Book an Appointment</h2>\r\n          <TextField\r\n            label=\"Doctor Name\"\r\n            value={doctor.firstName + \" \" + doctor.lastName}\r\n            disabled\r\n          />\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              disableToolbar\r\n              variant=\"inline\"\r\n              format=\"MM/dd/yyyy\"\r\n              margin=\"normal\"\r\n              label=\"Appointment Date\"\r\n              value={selectedDate}\r\n              onChange={(event) => setSelectedDate(event.target.value)}\r\n              KeyboardButtonProps={{\r\n                disabled: true, // Disable keyboard input for date selection\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          <FormControl >\r\n            <Select\r\n              value={timeSlot}\r\n              onChange={(e) => setTimeSlot(e.target.value)}\r\n              displayEmpty\r\n              error={!isTimeSlotSelected}\r\n            >\r\n              <MenuItem value=\"\">Select a time slot</MenuItem>\r\n              {timeSlots.map((slot) => (\r\n                <MenuItem key={slot} value={slot}>\r\n                  {slot}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            {!isTimeSlotSelected && <span className=\"errorcontainer\">Select a time slot</span>}\r\n          </FormControl>\r\n          <FormControl >\r\n            <TextField\r\n              label=\"Medical History\"\r\n              multiline\r\n              value={medicalHistory}\r\n              onChange={(e) => setMedicalHistory(e.target.value)}\r\n              variant=\"outlined\"\r\n            />\r\n          </FormControl>\r\n          <FormControl >\r\n            <TextField\r\n              label=\"Symptoms\"\r\n              multiline\r\n              value={symptoms}\r\n              onChange={(e) => setSymptoms(e.target.value)}\r\n              variant=\"outlined\"\r\n            />\r\n          </FormControl>\r\n          <Button variant=\"contained\" color=\"primary\" size=\"small\">BOOK APPOINTMENT</Button>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BookAppointment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}